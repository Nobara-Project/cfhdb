{
    "profiles": [
      {
        "codename": "nv-nvb-open.nobaraproject.org",
        "i18n_desc": "NVIDIA Graphics drivers (Beta) for Linux with Official Nvidia Open Modules (Recommended)",
        "i18n_desc[en_US]": "NVIDIA Graphics drivers (Beta) for Linux with Official Nvidia Open Modules (Recommended)",
        "icon_name": "nvidia",
        "license": "Proprietary",
        "class_ids": ["0300", "0302", "0380"],
        "vendor_ids": ["10de"],
        "device_ids": ["*"],
        "blacklisted_class_ids": [],
        "blacklisted_vendor_ids": [],
        "blacklisted_device_ids": ["1340", "1341", "1344", "1346", "1347", "1348", "1349", "134b", "134d", "134e", "134f", "137a", "137b", "1380", "1381", "1382", "1390", "1391", "1392", "1393", "1398", "1399", "139a", "139b", "139c", "139d", "13b0", "13b1", "13b2", "13b3", "13b4", "13b6", "13b9", "13ba", "13bb", "13bc", "13c0", "13c2", "13d7", "13d8", "13d9", "13da", "13f0", "13f1", "13f2", "13f3", "13f8", "13f9", "13fa", "13fb", "1401", "1402", "1406", "1407", "1427", "1430", "1431", "1436", "15f0", "15f7", "15f8", "15f9", "1617", "1618", "1619", "161a", "1667", "174d", "174e", "179c", "17c2", "17c8", "17f0", "17f1", "17fd", "1b00", "1b02", "1b06", "1b30", "1b38", "1b80", "1b81", "1b82", "1b83", "1b84", "1b87", "1ba0", "1ba1", "1ba2", "1bb0", "1bb1", "1bb4", "1bb5", "1bb6", "1bb7", "1bb8", "1bb9", "1bbb", "1bc7", "1be0", "1be1", "1c02", "1c03", "1c04", "1c06", "1c07", "1c09", "1c20", "1c21", "1c22", "1c23", "1c30", "1c31", "1c60", "1c61", "1c62", "1c81", "1c82", "1c83", "1c8c", "1c8d", "1c8f", "1c90", "1c91", "1c92", "1c94", "1c96", "1cb1", "1cb2", "1cb3", "1cb6", "1cba", "1cbb", "1cbc", "1cbd", "1cfa", "1cfb", "1d01", "1d02", "1d10", "1d11", "1d12", "1d13", "1d16", "1d33", "1d34", "1d52", "1d81", "1db1", "1db3", "1db4", "1db5", "1db6", "1db7", "1db8", "1dba", "1df0", "1df2", "1df6", "1e09", "1f0b", "2189"],
        "packages": "Option::is_none",
        "check_script": "dnf repo list --disabled | grep nobara-nvidia-beta; then if rpm -q nvidia-driver; then cat /etc/nvidia/kernel.conf | grep \"MODULE_VARIANT=kernel-open\" || exit 1;else exit 1;fi; else exit 1;fi",
        "install_script": "dnf repo list --disabled | grep nobara-nvidia-beta; then if rpm -q nvidia-driver; then sed -i -e 's/kernel$/kernel-open/g' /etc/nvidia/kernel.conf; echo \"options nvidia-drm modeset=1 fbdev=1\" | tee /etc/modprobe.d/nvidia-modeset.conf && chmod 644 /etc/modprobe.d/nvidia-modeset.conf && systemctl enable --now akmods; akmods; dracut -f --regenerate-all;fi;fi; dnf config-manager setopt nobara-nvidia-beta.enabled=1 && dnf config-manager setopt nobara-nvidia-new-feature.enabled=0 && dnf config-manager setopt nobara-nvidia-production.enabled=0 && dnf remove -y nvidia* && dnf remove -y kmod-nvidia* && dnf remove -y akmod-nvidia && dnf remove -y dkms-nvidia && rm -rf /var/lib/dkms/nvidia* && dnf install -y akmod-nvidia nvidia-driver libnvidia-ml libnvidia-ml.i686 libnvidia-fbc nvidia-driver-cuda nvidia-driver-cuda-libs nvidia-driver-cuda-libs.i686 nvidia-driver-libs nvidia-driver-libs.i686 nvidia-kmod-common nvidia-libXNVCtrl nvidia-modprobe nvidia-persistenced nvidia-settings nvidia-xconfig nvidia-vaapi-driver nvidia-gpu-firmware libnvidia-cfg --refresh && sed -i -e 's/kernel$/kernel-open/g' /etc/nvidia/kernel.conf && echo \"options nvidia-drm modeset=1 fbdev=1\" | tee /etc/modprobe.d/nvidia-modeset.conf && chmod 644 /etc/modprobe.d/nvidia-modeset.conf && systemctl enable --now akmods; akmods; dracut -f --regenerate-all",
        "remove_script": "dnf remove -y nvidia* && dnf remove -y kmod-nvidia* && dnf remove -y akmod-nvidia && dnf remove -y dkms-nvidia && rm -rf /var/lib/dkms/nvidia* && dnf install -y nvidia-gpu-firmware && akmods; dracut -f --regenerate-all",
        "experimental": true,
        "removable": true,
        "veiled": true,
        "priority": 14
      },
      {
        "codename": "nv-nvb.nobaraproject.org",
        "i18n_desc": "NVIDIA Graphics drivers (Beta) for Linux (Closed)",
        "i18n_desc[en_US]": "NVIDIA Graphics drivers (Beta) for Linux (Closed)",
        "icon_name": "nvidia",
        "license": "Proprietary",
        "class_ids": ["0300", "0302", "0380"],
        "vendor_ids": ["10de"],
        "device_ids": ["*"],
        "blacklisted_class_ids": [],
        "blacklisted_vendor_ids": [],
        "blacklisted_device_ids": [],
        "packages": "Option::is_none",
        "check_script": "if dnf repo list --disabled | grep nobara-nvidia-beta; then if rpm -q nvidia-driver; then cat /etc/nvidia/kernel.conf | grep \"MODULE_VARIANT=kernel$\" || exit 1;else exit 1;fi; else exit 1;fi",
        "install_script": "if dnf repo list --disabled | grep nobara-nvidia-beta; then if rpm -q nvidia-driver; then sed -i -e 's/kernel-open/kernel/g' /etc/nvidia/kernel.conf; echo \"options nvidia-drm modeset=1 fbdev=1\" | tee /etc/modprobe.d/nvidia-modeset.conf && chmod 644 /etc/modprobe.d/nvidia-modeset.conf && systemctl enable --now akmods; akmods; dracut -f --regenerate-all;fi;fi; dnf config-manager setopt nobara-nvidia-beta.enabled=1 && dnf config-manager setopt nobara-nvidia-new-feature.enabled=0 && dnf config-manager setopt nobara-nvidia-production.enabled=0 && dnf remove -y nvidia* && dnf remove -y kmod-nvidia* && dnf remove -y akmod-nvidia && dnf remove -y dkms-nvidia && rm -rf /var/lib/dkms/nvidia* && dnf install -y akmod-nvidia nvidia-driver libnvidia-ml libnvidia-ml.i686 libnvidia-fbc nvidia-driver-cuda nvidia-driver-cuda-libs nvidia-driver-cuda-libs.i686 nvidia-driver-libs nvidia-driver-libs.i686 nvidia-kmod-common nvidia-libXNVCtrl nvidia-modprobe nvidia-persistenced nvidia-settings nvidia-xconfig nvidia-vaapi-driver nvidia-gpu-firmware libnvidia-cfg --refresh && sed -i -e 's/kernel-open/kernel/g' /etc/nvidia/kernel.conf && echo \"options nvidia-drm modeset=1 fbdev=1\" | tee /etc/modprobe.d/nvidia-modeset.conf && chmod 644 /etc/modprobe.d/nvidia-modeset.conf && systemctl enable --now akmods; akmods; dracut -f --regenerate-all",
        "remove_script": "dnf remove -y nvidia* && dnf remove -y kmod-nvidia* && dnf remove -y akmod-nvidia && dnf remove -y dkms-nvidia && rm -rf /var/lib/dkms/nvidia* && dnf install -y nvidia-gpu-firmware && akmods; dracut -f --regenerate-all",
        "experimental": true,
        "removable": true,
        "veiled": true,
        "priority": 15
      },
      {
        "codename": "nv-nvnf-open.nobaraproject.org",
        "i18n_desc": "NVIDIA Graphics drivers (New Feature) for Linux with Official Nvidia Open Modules (Recommended)",
        "i18n_desc[en_US]": "NVIDIA Graphics drivers (New Feature) for Linux with Official Nvidia Open Modules (Recommended)",
        "icon_name": "nvidia",
        "license": "Proprietary",
        "class_ids": ["0300", "0302", "0380"],
        "vendor_ids": ["10de"],
        "device_ids": ["*"],
        "blacklisted_class_ids": [],
        "blacklisted_vendor_ids": [],
        "blacklisted_device_ids": ["1340", "1341", "1344", "1346", "1347", "1348", "1349", "134b", "134d", "134e", "134f", "137a", "137b", "1380", "1381", "1382", "1390", "1391", "1392", "1393", "1398", "1399", "139a", "139b", "139c", "139d", "13b0", "13b1", "13b2", "13b3", "13b4", "13b6", "13b9", "13ba", "13bb", "13bc", "13c0", "13c2", "13d7", "13d8", "13d9", "13da", "13f0", "13f1", "13f2", "13f3", "13f8", "13f9", "13fa", "13fb", "1401", "1402", "1406", "1407", "1427", "1430", "1431", "1436", "15f0", "15f7", "15f8", "15f9", "1617", "1618", "1619", "161a", "1667", "174d", "174e", "179c", "17c2", "17c8", "17f0", "17f1", "17fd", "1b00", "1b02", "1b06", "1b30", "1b38", "1b80", "1b81", "1b82", "1b83", "1b84", "1b87", "1ba0", "1ba1", "1ba2", "1bb0", "1bb1", "1bb4", "1bb5", "1bb6", "1bb7", "1bb8", "1bb9", "1bbb", "1bc7", "1be0", "1be1", "1c02", "1c03", "1c04", "1c06", "1c07", "1c09", "1c20", "1c21", "1c22", "1c23", "1c30", "1c31", "1c60", "1c61", "1c62", "1c81", "1c82", "1c83", "1c8c", "1c8d", "1c8f", "1c90", "1c91", "1c92", "1c94", "1c96", "1cb1", "1cb2", "1cb3", "1cb6", "1cba", "1cbb", "1cbc", "1cbd", "1cfa", "1cfb", "1d01", "1d02", "1d10", "1d11", "1d12", "1d13", "1d16", "1d33", "1d34", "1d52", "1d81", "1db1", "1db3", "1db4", "1db5", "1db6", "1db7", "1db8", "1dba", "1df0", "1df2", "1df6", "1e09", "1f0b", "2189"],
        "packages": "Option::is_none",
        "check_script": "if dnf repo list --disabled | grep nobara-nvidia-new-feature; then if rpm -q nvidia-driver; then cat /etc/nvidia/kernel.conf | grep \"MODULE_VARIANT=kernel-open\" || exit 1;else exit 1;fi; else exit 1;fi",
        "install_script": "if dnf repo list --disabled | grep nobara-nvidia-new-feature; then if rpm -q nvidia-driver; then sed -i -e 's/kernel$/kernel-open/g' /etc/nvidia/kernel.conf; echo \"options nvidia-drm modeset=1 fbdev=1\" | tee /etc/modprobe.d/nvidia-modeset.conf && chmod 644 /etc/modprobe.d/nvidia-modeset.conf && systemctl enable --now akmods; akmods; dracut -f --regenerate-all;fi;fi; dnf config-manager setopt nobara-nvidia-new-feature.enabled=1 && dnf config-manager setopt nobara-nvidia-beta.enabled=0 && dnf config-manager setopt nobara-nvidia-production.enabled=0 && dnf remove -y nvidia* && dnf remove -y kmod-nvidia* && dnf remove -y akmod-nvidia && dnf remove -y dkms-nvidia && rm -rf /var/lib/dkms/nvidia* && dnf install -y akmod-nvidia nvidia-driver libnvidia-ml libnvidia-ml.i686 libnvidia-fbc nvidia-driver-cuda nvidia-driver-cuda-libs nvidia-driver-cuda-libs.i686 nvidia-driver-libs nvidia-driver-libs.i686 nvidia-kmod-common nvidia-libXNVCtrl nvidia-modprobe nvidia-persistenced nvidia-settings nvidia-xconfig nvidia-vaapi-driver nvidia-gpu-firmware libnvidia-cfg --refresh && sed -i -e 's/kernel$/kernel-open/g' /etc/nvidia/kernel.conf && echo \"options nvidia-drm modeset=1 fbdev=1\" | tee /etc/modprobe.d/nvidia-modeset.conf && chmod 644 /etc/modprobe.d/nvidia-modeset.conf && systemctl enable --now akmods; akmods; dracut -f --regenerate-all",
        "remove_script": "dnf remove -y nvidia* && dnf remove -y kmod-nvidia* && dnf remove -y akmod-nvidia && dnf remove -y dkms-nvidia && rm -rf /var/lib/dkms/nvidia* && dnf install -y nvidia-gpu-firmware && akmods; dracut -f --regenerate-all",
        "experimental": false,
        "removable": true,
        "veiled": true,
        "priority": 10
      },
      {
        "codename": "nv-nvnf.nobaraproject.org",
        "i18n_desc": "NVIDIA Graphics drivers (New Feature) for Linux (Closed)",
        "i18n_desc[en_US]": "NVIDIA Graphics drivers (New Feature) for Linux (Closed)",
        "icon_name": "nvidia",
        "license": "Proprietary",
        "class_ids": ["0300", "0302", "0380"],
        "vendor_ids": ["10de"],
        "device_ids": ["*"],
        "blacklisted_class_ids": [],
        "blacklisted_vendor_ids": [],
        "blacklisted_device_ids": [],
        "packages": "Option::is_none",
        "check_script": "if dnf repo list --disabled | grep nobara-nvidia-new-feature; then if rpm -q nvidia-driver; then cat /etc/nvidia/kernel.conf | grep \"MODULE_VARIANT=kernel$\" || exit 1;else exit 1;fi; else exit 1;fi",
        "install_script": "if dnf repo list --disabled | grep nobara-nvidia-new-feature; then if rpm -q nvidia-driver; then sed -i -e 's/kernel-open/kernel/g' /etc/nvidia/kernel.conf; echo \"options nvidia-drm modeset=1 fbdev=1\" | tee /etc/modprobe.d/nvidia-modeset.conf && chmod 644 /etc/modprobe.d/nvidia-modeset.conf && systemctl enable --now akmods; akmods; dracut -f --regenerate-all;fi;fi; dnf config-manager setopt nobara-nvidia-new-feature.enabled=1 && dnf config-manager setopt nobara-nvidia-beta.enabled=0 && dnf config-manager setopt nobara-nvidia-production.enabled=0 && dnf remove -y nvidia* && dnf remove -y kmod-nvidia* && dnf remove -y akmod-nvidia && dnf remove -y dkms-nvidia && rm -rf /var/lib/dkms/nvidia* && dnf install -y akmod-nvidia nvidia-driver libnvidia-ml libnvidia-ml.i686 libnvidia-fbc nvidia-driver-cuda nvidia-driver-cuda-libs nvidia-driver-cuda-libs.i686 nvidia-driver-libs nvidia-driver-libs.i686 nvidia-kmod-common nvidia-libXNVCtrl nvidia-modprobe nvidia-persistenced nvidia-settings nvidia-xconfig nvidia-vaapi-driver nvidia-gpu-firmware libnvidia-cfg --refresh && sed -i -e 's/kernel-open/kernel/g' /etc/nvidia/kernel.conf && echo \"options nvidia-drm modeset=1 fbdev=1\" | tee /etc/modprobe.d/nvidia-modeset.conf && chmod 644 /etc/modprobe.d/nvidia-modeset.conf && systemctl enable --now akmods; akmods; dracut -f --regenerate-all",
        "remove_script": "dnf remove -y nvidia* && dnf remove -y kmod-nvidia* && dnf remove -y akmod-nvidia && dnf remove -y dkms-nvidia && rm -rf /var/lib/dkms/nvidia* && dnf install -y nvidia-gpu-firmware && akmods; dracut -f --regenerate-all",
        "experimental": false,
        "removable": true,
        "veiled": true,
        "priority": 11
      },
      {
        "codename": "nv-nvp-open.nobaraproject.org",
        "i18n_desc": "NVIDIA Graphics drivers (Production) for Linux with Official Nvidia Open Modules (Recommended)",
        "i18n_desc[en_US]": "NVIDIA Graphics drivers (Production) for Linux with Official Nvidia Open Modules (Recommended)",
        "icon_name": "nvidia",
        "license": "Proprietary",
        "class_ids": ["0300", "0302", "0380"],
        "vendor_ids": ["10de"],
        "device_ids": ["*"],
        "blacklisted_class_ids": [],
        "blacklisted_vendor_ids": [],
        "blacklisted_device_ids": ["1340", "1341", "1344", "1346", "1347", "1348", "1349", "134b", "134d", "134e", "134f", "137a", "137b", "1380", "1381", "1382", "1390", "1391", "1392", "1393", "1398", "1399", "139a", "139b", "139c", "139d", "13b0", "13b1", "13b2", "13b3", "13b4", "13b6", "13b9", "13ba", "13bb", "13bc", "13c0", "13c2", "13d7", "13d8", "13d9", "13da", "13f0", "13f1", "13f2", "13f3", "13f8", "13f9", "13fa", "13fb", "1401", "1402", "1406", "1407", "1427", "1430", "1431", "1436", "15f0", "15f7", "15f8", "15f9", "1617", "1618", "1619", "161a", "1667", "174d", "174e", "179c", "17c2", "17c8", "17f0", "17f1", "17fd", "1b00", "1b02", "1b06", "1b30", "1b38", "1b80", "1b81", "1b82", "1b83", "1b84", "1b87", "1ba0", "1ba1", "1ba2", "1bb0", "1bb1", "1bb4", "1bb5", "1bb6", "1bb7", "1bb8", "1bb9", "1bbb", "1bc7", "1be0", "1be1", "1c02", "1c03", "1c04", "1c06", "1c07", "1c09", "1c20", "1c21", "1c22", "1c23", "1c30", "1c31", "1c60", "1c61", "1c62", "1c81", "1c82", "1c83", "1c8c", "1c8d", "1c8f", "1c90", "1c91", "1c92", "1c94", "1c96", "1cb1", "1cb2", "1cb3", "1cb6", "1cba", "1cbb", "1cbc", "1cbd", "1cfa", "1cfb", "1d01", "1d02", "1d10", "1d11", "1d12", "1d13", "1d16", "1d33", "1d34", "1d52", "1d81", "1db1", "1db3", "1db4", "1db5", "1db6", "1db7", "1db8", "1dba", "1df0", "1df2", "1df6", "1e09", "1f0b", "2189"],
        "packages": "Option::is_none",
        "check_script": "if dnf repo list --disabled | grep nobara-nvidia-production; then if rpm -q nvidia-driver; then cat /etc/nvidia/kernel.conf | grep \"MODULE_VARIANT=kernel-open\" || exit 1;else exit 1;fi; else exit 1;fi",
        "install_script": "if dnf repo list --disabled | grep nobara-nvidia-production; then if rpm -q nvidia-driver; then sed -i -e 's/kernel$/kernel-open/g' /etc/nvidia/kernel.conf; echo \"options nvidia-drm modeset=1 fbdev=1\" | tee /etc/modprobe.d/nvidia-modeset.conf && chmod 644 /etc/modprobe.d/nvidia-modeset.conf && systemctl enable --now akmods; akmods; dracut -f --regenerate-all;fi;fi; dnf config-manager setopt nobara-nvidia-production.enabled=1 && dnf config-manager setopt nobara-nvidia-beta.enabled=0 && dnf config-manager setopt nobara-nvidia-new-feature.enabled=0 && dnf remove -y nvidia* && dnf remove -y kmod-nvidia* && dnf remove -y akmod-nvidia && dnf remove -y dkms-nvidia && rm -rf /var/lib/dkms/nvidia* && dnf install -y akmod-nvidia nvidia-driver libnvidia-ml libnvidia-ml.i686 libnvidia-fbc nvidia-driver-cuda nvidia-driver-cuda-libs nvidia-driver-cuda-libs.i686 nvidia-driver-libs nvidia-driver-libs.i686 nvidia-kmod-common nvidia-libXNVCtrl nvidia-modprobe nvidia-persistenced nvidia-settings nvidia-xconfig nvidia-vaapi-driver nvidia-gpu-firmware libnvidia-cfg --refresh && sed -i -e 's/kernel$/kernel-open/g' /etc/nvidia/kernel.conf && echo \"options nvidia-drm modeset=1 fbdev=1\" | tee /etc/modprobe.d/nvidia-modeset.conf && chmod 644 /etc/modprobe.d/nvidia-modeset.conf && systemctl enable --now akmods; akmods; dracut -f --regenerate-all",
        "remove_script": "dnf remove -y nvidia* && dnf remove -y kmod-nvidia* && dnf remove -y akmod-nvidia && dnf remove -y dkms-nvidia && rm -rf /var/lib/dkms/nvidia* && dnf install -y nvidia-gpu-firmware && akmods; dracut -f --regenerate-all",
        "experimental": false,
        "removable": true,
        "priority": 12
      },
      {
        "codename": "nv-nvp.nobaraproject.org",
        "i18n_desc": "NVIDIA Graphics drivers (Production) for Linux (Closed)",
        "i18n_desc[en_US]": "NVIDIA Graphics drivers (Production) for Linux (Closed)",
        "icon_name": "nvidia",
        "license": "Proprietary",
        "class_ids": ["0300", "0302", "0380"],
        "vendor_ids": ["10de"],
        "device_ids": ["*"],
        "blacklisted_class_ids": [],
        "blacklisted_vendor_ids": [],
        "blacklisted_device_ids": [],
        "packages": "Option::is_none",
        "check_script": "if dnf repo list --disabled | grep nobara-nvidia-production; then if rpm -q nvidia-driver; then cat /etc/nvidia/kernel.conf | grep \"MODULE_VARIANT=kernel$\" || exit 1;else exit 1;fi; else exit 1;fi",
        "install_script": "if dnf repo list --disabled | grep nobara-nvidia-production; then if rpm -q nvidia-driver; then sed -i -e 's/kernel-open/kernel/g' /etc/nvidia/kernel.conf; echo \"options nvidia-drm modeset=1 fbdev=1\" | tee /etc/modprobe.d/nvidia-modeset.conf && chmod 644 /etc/modprobe.d/nvidia-modeset.conf && systemctl enable --now akmods; akmods; dracut -f --regenerate-all;fi;fi; dnf config-manager setopt nobara-nvidia-production.enabled=1 && dnf config-manager setopt nobara-nvidia-beta.enabled=0 && dnf config-manager setopt nobara-nvidia-new-feature.enabled=0 && dnf remove -y nvidia* && dnf remove -y kmod-nvidia* && dnf remove -y akmod-nvidia && dnf remove -y dkms-nvidia && rm -rf /var/lib/dkms/nvidia* && dnf install -y akmod-nvidia nvidia-driver libnvidia-ml libnvidia-ml.i686 libnvidia-fbc nvidia-driver-cuda nvidia-driver-cuda-libs nvidia-driver-cuda-libs.i686 nvidia-driver-libs nvidia-driver-libs.i686 nvidia-kmod-common nvidia-libXNVCtrl nvidia-modprobe nvidia-persistenced nvidia-settings nvidia-xconfig nvidia-vaapi-driver nvidia-gpu-firmware libnvidia-cfg --refresh && sed -i -e 's/kernel-open/kernel/g' /etc/nvidia/kernel.conf && echo \"options nvidia-drm modeset=1 fbdev=1\" | tee /etc/modprobe.d/nvidia-modeset.conf && chmod 644 /etc/modprobe.d/nvidia-modeset.conf && systemctl enable --now akmods; akmods; dracut -f --regenerate-all",
        "remove_script": "dnf remove -y nvidia* && dnf remove -y kmod-nvidia* && dnf remove -y akmod-nvidia && dnf remove -y dkms-nvidia && rm -rf /var/lib/dkms/nvidia* && dnf install -y nvidia-gpu-firmware && akmods; dracut -f --regenerate-all",
        "experimental": false,
        "removable": true,
        "priority": 13
      },
      {
        "codename": "mesa-vulkan-drivers",
        "i18n_desc": "Latest stable version of Mesa Vulkan.",
        "i18n_desc[en_US]": "Latest stable version of Mesa Vulkan.",
        "icon_name": "video-display",
        "license": "MIT",
        "class_ids": ["0300", "0302", "0380"],
        "vendor_ids": ["*"],
        "device_ids": ["*"],
        "blacklisted_class_ids": [],
        "blacklisted_vendor_ids": [],
        "blacklisted_device_ids": [],
        "packages": ["Option::is_none"],
        "check_script": "rpm -q mesa-vulkan-drivers.x86_64 && rpm -q mesa-vulkan-drivers.i686",
        "install_script": "rpm -e --nodeps mesa-vulkan-drivers-git.x86_64 && rpm -e --nodeps mesa-vulkan-drivers-git.i686 && dnf install -y mesa-vulkan-drivers.x86_64 mesa-vulkan-drivers.i686 --refresh",
        "remove_script": "Option::is_none",
        "experimental": false,
        "removable": false,
        "priority": 20
      },
      {
        "codename": "mesa-vulkan-drivers-git",
        "i18n_desc": "Latest git version of Mesa Vulkan.",
        "i18n_desc[en_US]": "Latest git version of Mesa Vulkan.",
        "icon_name": "video-display",
        "license": "MIT",
        "class_ids": ["0300", "0302", "0380"],
        "vendor_ids": ["*"],
        "device_ids": ["*"],
        "blacklisted_class_ids": [],
        "blacklisted_vendor_ids": [],
        "blacklisted_device_ids": [],
        "packages": ["Option::is_none"],
        "check_script": "rpm -q mesa-vulkan-drivers-git.x86_64 && rpm -q mesa-vulkan-drivers-git.i686",
        "install_script": "rpm -e --nodeps mesa-vulkan-drivers.x86_64 && rpm -e --nodeps mesa-vulkan-drivers.i686 && dnf install -y mesa-vulkan-drivers-git.x86_64 mesa-vulkan-drivers-git.i686 --refresh",
        "remove_script": "Option::is_none",
        "experimental": true,
        "removable": false,
        "priority": 21
      },
      {
        "codename": "rocm-meta",
        "i18n_desc": "AMD ROCm Compute Driver Stack.",
        "i18n_desc[en_US]": "AMD ROCm Compute Driver Stack.",
        "icon_name": "amd",
        "license": "MIT + Proprietary",
        "class_ids": ["0300", "0302", "0380"],
        "vendor_ids": ["1002", "1022"],
        "device_ids": ["*"],
        "blacklisted_class_ids": [],
        "blacklisted_vendor_ids": [],
        "blacklisted_device_ids": [],
        "packages": ["rocm-meta", "rocm-comgr", "rocm-runtime", "rocm-smi", "rocm-clinfo", "rocm-cmake", "rocm-core", "rocm-rpm-macros", "python3-torch-rocm-gfx9", "python3-torchaudio-rocm-gfx9", "rocprim-devel", "rocblas", "rocsparse", "rocminfo", "rocrand", "hipblas", "hipfft", "hipsolver", "rocm-hip", "rocfft", "rocsolver", "hipblaslt", "rocalution", "roctracer", "rocm-opencl"],
        "check_script": "rpm -q rocm-meta && rpm -q rocm-comgr && rpm -q rocm-runtime && rpm -q rocm-smi && rpm -q rocm-clinfo && rpm -q rocm-cmake && rpm -q rocm-core && rpm -q rocm-rpm-macros && rpm -q python3-torch-rocm-gfx9 && rpm -q python3-torchaudio-rocm-gfx9 && rpm -q rocprim-devel && rpm -q rocblas && rpm -q rocsparse && rpm -q rocminfo && rpm -q rocrand && rpm -q hipblas && rpm -q hipfft && rpm -q hipsolver && rpm -q rocm-hip && rpm -q rocfft && rpm -q rocsolver && rpm -q hipblaslt && rpm -q rocalution && rpm -q roctracer && rpm -q rocm-opencl",
        "install_script": "dnf install -y rocm-meta rocm-comgr rocm-runtime rocm-smi rocm-clinfo rocm-cmake rocm-core rocm-rpm-macros python3-torch-rocm-gfx9 python3-torchaudio-rocm-gfx9 rocprim-devel rocblas rocsparse rocminfo rocrand hipblas hipfft hipsolver rocm-hip rocfft rocsolver hipblaslt rocalution roctracer rocm-opencl",
        "remove_script": "dnf remove -y rocm-meta rocm-comgr rocm-runtime rocm-smi rocm-clinfo rocm-cmake rocm-core rocm-rpm-macros python3-torch-rocm-gfx9 python3-torchaudio-rocm-gfx9 rocprim-devel rocblas rocsparse rocminfo rocrand hipblas hipfft hipsolver rocm-hip rocfft rocsolver hipblaslt rocalution roctracer rocm-opencl",
        "experimental": false,
        "removable": true,
        "priority": 99
      },
      {
        "codename": "steamdeck-jupiter-driver",
        "i18n_desc": "Steamdeck Jupiter driver.",
        "i18n_desc[en_US]": "Steamdeck Jupiter driver.",
        "icon_name": "input-gaming",
        "license": "MIT",
        "class_ids": ["*"],
        "vendor_ids": ["1002"],
        "device_ids": ["1435", "163f"],
        "blacklisted_class_ids": [],
        "blacklisted_vendor_ids": [],
        "blacklisted_device_ids": [],
        "packages": ["jupiter-hw-support", "jupiter-fan-control"],
        "check_script": "rpm -q jupiter-hw-support && rpm -q jupiter-fan-control",
        "install_script": "Option::is_none",
        "remove_script": "Option::is_none",
        "experimental": false,
        "removable": true,
        "priority": 99
      },
      {
        "codename": "alsa-firmware",
        "i18n_desc": "Firmware binaries for a number of sound cards.",
        "i18n_desc[en_US]": "Firmware binaries for a number of sound cards.",
        "icon_name": "speaker",
        "license": "Proprietary",
        "class_ids": ["*"],
        "vendor_ids": ["1102"],
        "device_ids": ["*"],
        "blacklisted_class_ids": [],
        "blacklisted_vendor_ids": [],
        "blacklisted_device_ids": [],
        "packages": ["alsa-firmware"],
        "check_script": "rpm -q alsa-firmware",
        "install_script": "Option::is_none",
        "remove_script": "Option::is_none",
        "experimental": false,
        "removable": true,
        "priority": 99
      },
      {
        "codename": "broadcom-wl",
        "i18n_desc": "Broadcom Wireless Driver.",
        "i18n_desc[en_US]": "Broadcom Wireless Driver.",
        "icon_name": "network-wireless",
        "license": "Proprietary",
        "class_ids": ["*"],
        "vendor_ids": ["14e4"],
        "device_ids": ["*"],
        "blacklisted_class_ids": [],
        "blacklisted_vendor_ids": [],
        "blacklisted_device_ids": [],
        "packages": ["broadcom-wl"],
        "check_script": "rpm -q broadcom-wl",
        "install_script": "Option::is_none",
        "remove_script": "Option::is_none",
        "experimental": false,
        "removable": true,
        "priority": 99
      }
    ]
  }
